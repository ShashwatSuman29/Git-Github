how to push or commit code from vs code:

step 1 - create repo
step 2 - open a folder in vs code and then open terminal
step 3- git init (which initialise git)
step 4- git add . (which adds all the file present in the folder to git)
step 5 - git commit -am "commit message" (it commits the files)
step 6 - git branch -M main (specify which branch to push code on)
step 7 - git remote add origin "link of repo"
step 8 - git push origin master ( specify which branch of push) 
step 9 - Sign in to let know who is pushing the code.

how to push or commit code from github desktop:

step 1 - click on add a existing repo in github desktop
step 2 - open the folder where all the code file are present
step 3 - it will say no such repo in present on github , so create a new repo
step 4 - then fetch origin / push all the code to github

how to clone github repo in vs code
step 1 - copy the http link of the repo
step 2 - open the folder in vs code where you want to clone the repo
step 3 - either click on source control (ctrl+ shift+ G) and clone the repo or open terminal and wirte git clone "link of the repo"

What is git?
-Git is a distributed version control system (DVCS) used for tracking changes in source code during software development. It allows multiple developers to collaborate on projects and keep track of changes made to the codebase over time. Here are some key features of Git:

1.Version Control: Git allows you to track changes to your codebase over time. It keeps a record of every change, who made it, and when.

2.Distributed Development: Git allows each developer to have a local copy of the entire development history. This means developers can work offline and independently, and then synchronize their work with others when they are ready.

3.Branching and Merging: Git makes it easy to create branches to work on new features or fixes without affecting the main codebase. Branches can be merged back into the main codebase when the work is completed.

4.Remote Repositories: Git allows you to work with remote repositories hosted on services like GitHub, GitLab, or Bitbucket. This enables collaboration between developers working in different locations.

5.Speed and Efficiency: Git is designed to be fast and efficient, allowing you to perform operations like committing changes, branching, merging, and searching through history quickly.

6.Open Source: Git is an open-source project maintained by a large community of developers. This means it is continuously improved and updated with new features and enhancements.

